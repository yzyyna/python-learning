
# 有些强类型的编程语言会提供多种整数类型，每种类型的长度都不同，能容纳的整数的大小也不同，开发者要根据实际数字的大小选用不同的类型。例如C语言提供了
# short、int、long、long long 四种类型的整数，它们的长度依次递增，初学者在选择整数类型时往往比较迷惑，有时候还会导致数值溢出。
# 而 Python 则不同，它的整数不分类型，或者说它只有一种类型的整数。Python 整数的取值范围是无限的，不管多大或者多小的数字，Python 都能轻松处理。
# 当所用数值超过计算机自身的计算能力时，Python 会自动转用高精度计算（大数计算）。
# 将 78 赋值给变量 n
n = 78
print(n)
print(type(n))

# 给x赋值一个很大的整数
x = 8888888888888888888888
print(x)
print(type(x))

# 给y赋值一个很小的整数
y = -7777777777777777777777
print(y)
print(type(y))

# 不管对于多大或者多小的整数，Python 只用一种类型存储，就是 int。
# 整数的不同进制
# 在 Python 中，可以使用多种进制来表示整数：
# 1) 十进制形式
# 我们平时常见的整数就是十进制形式，它由 0~9 共十个数字排列组合而成。

# 注意，使用十进制形式的整数不能以 0 作为开头，除非这个数值本身就是 0。
# 2) 二进制形式
# 由 0 和 1 两个数字组成，书写时以0b或0B开头。例如，101 对应十进制数是 5。
# 3) 八进制形式
# 八进制整数由 0~7 共八个数字组成，以0o或0O开头。注意，第一个符号是数字 0，第二个符号是大写或小写的字母 O。

# 在 Python 2.x 中，八进制数字还可以直接以0（数字零）开头。
# 4) 十六进制形式
# 由 0~9 十个数字以及 A~F（或 a~f）六个字母组成，书写时以0x或0X开头，
# 十六进制
hex1 = 0x45
hex2 = 0x4Af
print("hex1Value: ", hex1)
print("hex2Value: ", hex2)

# 二进制
bin1 = 0b101
print('bin1Value: ', bin1)
bin2 = 0B110
print('bin2Value: ', bin2)

# 八进制
oct1 = 0o26
print('oct1Value: ', oct1)
oct2 = 0O41
print('oct2Value: ', oct2)

# 数字分隔符
# 为了提高数字的的可读性，Python 3.x 允许使用下划线_作为数字（包括整数和小数）的分隔符。通常每隔三个数字添加一个下划线，类似于英文数字中的逗号。下划线不会影响数字本身的值。
click = 1_301_547
distance = 384_000_000
print("Python教程阅读量：", click)
print("地球和月球的距离：", distance)
